<?php

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Maatwebsite\Excel\Facades\Excel;

class NewExcel extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'app:new-excel';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Command description';

    /**
     * Execute the console command.
     */
    public function handle()
    {
        $oldData = collect(data_get(Excel::toArray([], storage_path('app/public/old-business-sector.csv')), '0', []));
        $oldDataHeaders = data_get($oldData, 0, []);
        $formattedOldData = collect([]);


        $oldData->each(function ($item, $key) use ($oldDataHeaders, $formattedOldData) {
            if ($key !== 0) {
                $new = collect($item)->reduce(function ($data, $sub, $key) use ($oldDataHeaders) {
                    return [
                        ...$data,
                        $oldDataHeaders[$key] => $sub
                    ];
                }, []);

                $formattedOldData->add($new);
            }
        });


        $oldDataReturns = collect(data_get(Excel::toArray([], storage_path('app/public/old-news.csv')), '0', []));
        $oldDataReturnsHeaders = data_get($oldDataReturns, 0, []);
        $formattedOldDataReturns = collect([]);

        $oldDataReturns->each(function ($item, $key) use ($oldDataReturnsHeaders, $formattedOldDataReturns) {
            if ($key !== 0) {
                $new = collect($item)->reduce(function ($data, $sub, $key) use ($oldDataReturnsHeaders) {
                    return [
                        ...$data,
                        $oldDataReturnsHeaders[$key] => $sub
                    ];
                }, []);

                $formattedOldDataReturns->add($new);
            }
        });


        $finalData = $formattedOldDataReturns->map(function ($item) use ($formattedOldData) {
            $news_business_sector = data_get($item, 'news_business_sector');
            $sector = $formattedOldData->map(function ($item) {
                return ["ID" => trim(data_get($item, 'ID')), ...$item];
            })->where('ID', $news_business_sector)->first();
            return [
                ...$item,
                'news_business_sector_title' => data_get($sector, 'Title', '')
            ];
        });

        // Convert data to a Laravel Collection
        $collection = collect($finalData);

        // Get headers from the keys of the first item
        $headers = $collection->first() ? array_keys($collection->first()) : [];

        // Get rows by converting each associative array to a numerically indexed array
        $rows = $collection->map(function ($item) {
            return array_values($item);
        })->toArray();

        // Prepend headers to the rows
        array_unshift($rows, $headers);
        Excel::store(new class ($rows) implements \Maatwebsite\Excel\Concerns\FromArray {
            protected $finalData;
            public function __construct(array $finalData)
            {
                $this->finalData = $finalData;
            }

            public function array() : array
            {
                return $this->finalData;
            }
        }, 'public/finalNews.csv');
    }
}